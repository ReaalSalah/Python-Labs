# -*- coding: utf-8 -*-
"""Functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XK0iCqALtfOiR_wMM_jWr-XbhRKx-HXA
"""

def count_vowels():
    x = input("Enter your text: ")
    vowels = "aeiouAEIOU"
    count = 0
    for i in x:
        if i in vowels:
            count += 1
    print("Total vowels:", count)


count_vowels()

def find_index_i():
    x = input("Enter a text: ")
    for n in range(len(x)):
        if x[n] == 'i':
            print(f"Index of 'i':", n)

find_index_i()

def multiplication_table():
    x = int(input("Enter a number: "))
    for i in range(1, x+1):
        for j in range(1, i+1):
            print(f"{i}*{j} = {i*j}")

multiplication_table()

def increase_stars():
    x = 4
    for i in range(x):
        print("*" * (i+1))

increase_stars()

def right_stars():
    x = 5
    for i in range(1, x):
        print(" " * (x - i) + "*" * i)


right_stars()

def incremental_stars():
    l = [" ", " ", " ", " ", " "]
    for _ in range(len(l)):
        l.append("*")
        l.remove(" ")
        print(l)


incremental_stars()

def sort_numbers():
    x = []
    for i in range(3):
        num = int(input("Enter a number "))
        x.append(num)
    accending = sorted(x)
    descending = sorted(x, reverse=True)
    print("Original List:", x)
    print("Ascending:", accending)
    print("Descending:", descending)


sort_numbers()

def multiplication_list():
    x = int(input("Enter a number: "))
    l = []
    for i in range(1, x + 1):
        y = []
        for j in range(1, i + 1):
            y.append(i * j)
        l.append(y)
    print(l)


multiplication_list()

def validate_name():
    name = input("Enter your name: ")
    if name.isdigit():
        print("Not valid")
    else:
        print(name.strip())

validate_name()

def validate_name2():
    name = input("Enter your name: ")
    if name.isdigit():
        print("Not valid")
    elif name.strip():
        print(name)
    else:
        print("Empty input")


validate_name2()

def validate_email():
    email = input("Enter email address: ")
    if "@" in email and "." in email:
        print(email)
    else:
        print("Invalid email ")

validate_email()

def user_login():
    users = [
        {'name': "reaal", 'password': 'reaal123'},
        {'name': "sara", 'password': 'sara123'}
    ]

    username = input("Enter username: ")
    password = input("Enter password: ")

    for i in users:
        if i['name'] == username and i['password'] == password:
            print( username, password)
            break
    else:
        print("Invalid username or password")

user_login()

def domain_email():
    emails = [
        "ali@gmail.com",
        "sara@yahoo.com",
        "mohamed@outlook.com",
        "noha@iti.gov.eg"
    ]

    domains = list(map(lambda x: x.split("@")[1], emails))
    print( domains)
domain_email()

def validate_email(email):
    if '@' in email and '.' in email:
        try:
            username, domain = email.split('@')
            if username and domain:
                if '.' in domain:
                    x, y = domain.split('.', 1)
                    if x and y:
                        return True
        except:
            return False
    return False

def validate_domains():
    emails = [
        "ali@gmail.com",
        "sara@yahoo.com",
        "mohamed@outlook.com",
        "noha@iti.gov.eg"
    ]

    valid_mails = list(filter(validate_email, emails))
    print("Valid Emails:", valid_mails)

    domains = list(map(lambda x: x.split("@")[1], valid_mails))
    print("Domains of valid emails:", domains)

validate_domains()

def validation2(email):
    try:
        if '@' in email and '.' in email:
            username, domain = email.split('@')
            if username and domain:
                if '.' in domain:
                    x, y = domain.split('.', 1)
                    if x and y:
                        return True
        return False
    except ValueError:
        print("Enter valid email ")
        return False


def email_validation_with_attempts():
    for i in range(5):
        email = input("Enter your email: ")
        if validation2(email):
            print(" Valid email!")
            break
        else:
            print(f" Invalid email")
    else:
        raise ValueError(" Many invalid attempts. Exiting.")


email_validation_with_attempts()