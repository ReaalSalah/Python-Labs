# -*- coding: utf-8 -*-
"""Super() example.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15EKY3G7lobyvXuKQuxYxs-Ip5U0I7jOK
"""

#  class for vehicle components
class VehicleComponent:
    def __init__(self):
        self.specs = []
        self.add_specs()

    def add_specs(self):
        self.specs.append("Base component: Generic part")

# Engine class inheriting from VehicleComponent
class Engine(VehicleComponent):
    def add_specs(self):
        super().add_specs()
        self.specs.append("Engine: 200 horsepower")

# Chassis class inheriting from VehicleComponent
class Chassis(VehicleComponent):
    def add_specs(self):
        super().add_specs()
        self.specs.append("Chassis: Steel frame")


class Car(Engine, Chassis):
    def __init__(self):
        super().__init__()
        self.add_specs()

    def add_specs(self):
        super().add_specs()  # Calls Engine's add_specs
        self.specs.append("Car: Sedan model")

# Create an instance of Car
car = Car()

# Print the MRO
print("MRO:", [cls.__name__ for cls in Car.__mro__])


print("\nCar Specifications:")
for spec in car.specs:
    print(spec)

class VehicleComponent:
    def feature(self):
        return "Generic component"

class Engine(VehicleComponent):
    def feature(self):
        return super().feature() + "  Engine powered"

class Chassis(VehicleComponent):
    def feature(self):
        return super().feature() + "  Chassis supported"

class Car(Engine, Chassis):
    def feature(self):
        return super().feature() + "  Fully assembled car"

print("Feature Description:")
car = Car()
print(car.feature())