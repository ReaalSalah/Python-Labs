# -*- coding: utf-8 -*-
"""class office.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aXxxO7S1nnijaiN0Vvp5sQnQVYLHBcYb
"""

# back to this class it is the 3

import math

class Office:
    employeesNum = 0

    def __init__(self, name, employees):
        self.name = name
        self.employees = employees
        Office.employeesNum += len(employees)

    @classmethod
    def change_emps_num(cls, num):
        cls.employeesNum = num

    def get_all_employees(self):
        return self.employees

    def get_employee(self, empId):
        for emp in self.employees:
            if emp.id == empId:
                return emp
        return None

    def hire(self, employee):
        self.employees.append(employee)
        Office.employeesNum += 1

    def fire(self, empId):
        for i, emp in enumerate(self.employees):
            if emp.id == empId:
                self.employees.pop(i)
                Office.employeesNum -= 1
                return
        print(f"Employee {empId} not found")

    def deduct(self, empId, deduction):
        emp = self.get_employee(empId)
        if emp:
            emp.salary -= deduction

    def reward(self, empId, reward):
        emp = self.get_employee(empId)
        if emp:
            emp.salary += reward

    @staticmethod
    def calculate_lateness(targetHour, moveHour, distance, velocity):
        if velocity == 0:
            return True
        travel_time = distance / velocity
        arrival_hour = moveHour + travel_time
        return arrival_hour > targetHour

    def check_lateness(self, empId, moveHour):
        emp = self.get_employee(empId)
        if emp:
            targetHour = 9
            is_late = self.calculate_lateness(targetHour, moveHour, emp.distanceToWork, emp.car.velocity)
            if is_late:
                self.deduct(empId, 10)
                print(f"Employee {empId} is late")
            else:
                self.reward(empId, 10)
                print(f"Employee {empId} is on time")